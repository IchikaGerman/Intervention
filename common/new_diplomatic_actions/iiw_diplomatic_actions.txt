intervene_war = {
    category = great_powers

    alert_index = 40
    alert_tooltip = intervene_war_alert_tooltip

    require_acceptance = no # Whether the recipient gets an option to decline

    is_visible = {
		is_great_power = yes
    }

    is_allowed = {
		is_great_power = yes
		custom_trigger_tooltip = {
			tooltip = iiw_intervene_war_tt
			FROM = {
				hidden_trigger = {
					OR = {
						AND = {
							PREV = {
								religion_group = christian
							}
							FROM = {
								religion_group = christian
							}
						}
						AND = {
							PREV = {
								religion_group = muslim
							}
							FROM = {
								religion_group = muslim
							}
						}
						AND = {
							PREV = {
								religion_group = eastern
							}
							FROM = {
								religion_group = eastern
							}
						}
						AND = {
							PREV = {
								religion_group = dharmic
							}
							FROM = {
								religion_group = dharmic
							}
						}
						AND = {
							PREV = {
								religion_group = pagan
							}
							FROM = {
								religion_group = pagan
							}
						}
						AND = {
							PREV = {
								religion_group = jewish_group
							}
							FROM = {
								religion_group = jewish_group
							}
						}
						AND = {
							PREV = {
								religion_group = zoroastrian_group
							}
							FROM = {
								religion_group = zoroastrian_group
							}
						}
					}
				}
			}
		}
		PREV = {
			power_projection = 40
			prestige = 50
		}
		AND = {
			PREV = { # Sender
				is_at_war = no
			}
			FROM = { # Target
				is_at_war = yes
				is_in_war = {
					defenders = FROM
				}
			}
			NOT = {
				war_with = PREV
			}
		}
	}
	
    on_accept = {
		PREV = {
			if = { # if limit is what I was trying to think of but wasnt sure if it worked in on_accept scope, it does though, I will explain this later if confusing
				limit = { # FROM has at least 190 opinion of PREV
					FROM = { # Because we are in the PREV scope currently, we must switch to FROM, and then check PREV opinion
						has_opinion = {
							who = PREV
							value = 190
						}
					}
				}
				join_all_defensive_wars_of = FROM
				FROM = { # Same as opinion, switch from PREV to FROM and change trust of PREV
					add_trust = {
						who = PREV
						value = 30
						mutual = no # Applies only to nation that you intervened with
					}
				}
				add_prestige = -10
			}
			if = {
				limit = { # FROM has at least 100 opinion of PREV
					FROM = { # Because we are in the PREV scope currently, we must switch to FROM, and then check PREV opinion
						has_opinion = {
							who = PREV
							value = 100
						}
					}
				}
				join_all_defensive_wars_of = FROM
				FROM = { # Same as opinion, switch from PREV to FROM and change trust of PREV
					add_trust = {
						who = PREV
						value = 20
						mutual = no # Applies only to nation that you intervened with
					}
				}
				add_prestige = -25
			}
			if = {
				limit = { # FROM has at least 0 opinion of PREV
					FROM = { # Because we are in the PREV scope currently, we must switch to FROM, and then check PREV opinion
						has_opinion = {
							who = PREV
							value = 0
						}
				    }
				}
				join_all_defensive_wars_of = FROM
				FROM = { # Same as opinion, switch from PREV to FROM and change trust of PREV
					add_trust = {
						who = PREV
						value = 10
						mutual = no # Applies only to nation that you intervened with
					}
				}
				add_prestige = -25
				add_stability = -1
			}
			if = {
				limit = {
					FROM = {
						has_opinion = {
							who = PREV
							value = -200
						}
					}
				}
				join_all_defensive_wars_of = FROM
				FROM = { # Same as opinion, switch from PREV to FROM and change trust of PREV
					add_trust = {
						who = PREV
						value = 10
						mutual = no # Applies only to nation that you intervened with
					}
				}
				join_all_defensive_wars_of = FROM
				add_prestige = -35
				add_stability = -1
			}
			else = { # If none of the above is true, join the war and gain 5 prestige
				join_all_defensive_wars_of = FROM
				add_prestige = 5
			}
		}
    }
    ai_will_do = { 
		always = no
    }
}
